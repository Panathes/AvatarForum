version: "3.7"

services:
  db:
    image: mysql:latest
    container_name: avatar-app
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: avatar
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: admin
      MYSQL_USER: user
    volumes:
      - ./docker-compose/mysql:/var/lib
      - ./application/api/migration:/migration
    networks:
      - database

  nginx:
    image: nginx:1.20.0
    restart: unless-stopped
    ports:
      - 8000:80
    volumes:
      - ./application/api/:/var/www
      - ./docker-compose/nginx:/etc/nginx/conf.d
    networks:
      - database

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./docker-compose/rabbit:/var/lib/rabbitmq/
      - ./log/:/var/log/rabbitmq
    networks:
      - database

  lambda:
    build:
      args:
        user: avatar
        uid: 1000
      context: ./
      dockerfile: ./docker-compose/lambda/Dockerfile
    container_name: lambda
    restart: unless-stopped
    working_dir: /var/www/
    depends_on:
      - rabbitmq
    volumes:
      - ./application/lambda/:/var/www/
      - ./avatar/:/var/www/upload/
    networks:
      - database

  app:
    build:
      args:
        user: avatar
        uid: 1000
      context: ./
      dockerfile: Dockerfile
    container_name: nginx-app
    restart: unless-stopped
    environment:
      REDIS_HOST: app_redis
    working_dir: /var/www/
    volumes:
      - ./application/api/:/var/www/
      - ./avatar/:/var/www/upload/
    networks:
      - database

networks:
  database:
    driver: bridge