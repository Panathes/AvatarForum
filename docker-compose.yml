version: "3"

services:
  database:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: avatar
      MYSQL_USER: user
      MYSQL_PASSWORD: user
    ports:
      - 3306:3306
    volumes:
      - ./data:/var/lib/mysql
    networks:
      - database

  redis:
    image: redis:4.0
    container_name: app_redis
    ports:
      - "6382:6379"
    networks:
      - database

  nginx:
    image: nginx:1.20.0
    restart: unless-stopped
    ports:
      - 8000:80
    volumes:
      - ./:/var/www
      - ./docker-compose/nginx:/etc/nginx/conf.d
    networks:
      - database

  app:
    build:
      args:
        user: avatar
        uid: 1000
      context: ./
      dockerfile: Dockerfile
    container_name: nginx-app
    restart: unless-stopped
    environment:
      REDIS_HOST: app_redis
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    networks:
      - database

  nginx-lambda:
    image: nginx:1.20.0
    restart: unless-stopped
    ports:
      - 8080:80
    volumes:
      - ./:/var/www
      - ./docker-compose/lambda:/etc/nginx/conf.d
    networks:
      - database

  lambda:
    build:
      args:
        user: avatar
        uid: 1000
      context: ./
      dockerfile: ./lambda/Dockerfile
    container_name: lambda-app
    restart: unless-stopped
    environment:
      REDIS_HOST: app_redis
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    networks:
      - database

networks:
  database:
    driver: bridge